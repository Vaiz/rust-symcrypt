name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            symcrypt: "https://github.com/microsoft/SymCrypt/releases/download/v103.4.2/symcrypt-windows-amd64-release-103.4.2-171f697.zip"
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            symcrypt: "https://github.com/microsoft/SymCrypt/releases/download/v103.4.2/symcrypt-windows-arm64-release-103.4.2-171f697.zip"
            use-cross: true
          - target: x86_64-unknown-linux-gnu
            symcrypt: "https://github.com/microsoft/SymCrypt/releases/download/v103.4.2/symcrypt-linux-generic-amd64-release-103.4.2-171f697.tar.gz"
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            symcrypt: "https://github.com/microsoft/SymCrypt/releases/download/v103.4.2/symcrypt-linux-generic-arm64-release-103.4.2-171f697.tar.gz"
            use-cross: true
            
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.target }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Install cross
      if: matrix.use-cross
      uses: taiki-e/install-action@v2
      with:
        tool: cross

    - name: Install host target
      if: "!matrix.use-cross"
      run: rustup target add ${{ matrix.target }}

    - name: Download SymCrypt
      run: |
        if [[ ${{ matrix.symcrypt }} == *.tar.gz ]]; then
          curl -L ${{ matrix.symcrypt }} -o symcrypt.tar.gz
          mkdir -p symcrypt
          tar -xzf symcrypt.tar.gz -C symcrypt
        else
          curl -L ${{ matrix.symcrypt }} -o symcrypt.zip
          mkdir -p symcrypt
          unzip symcrypt.zip -d symcrypt
        fi

    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
